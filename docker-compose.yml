version: '2'

services:
    web:
        build: .
        command: gunicorn backend.wsgi:application --bind 0.0.0.0:8001 --log-level debug
        expose:
            - 8001
        env_file:
            - ./environments/web.test.env
        image: jehob/law-orga-backend
        # image: jehob/law-orga-backend:0.1.1prometheus

    nginx:
        image: nginx:1.19.0-alpine
        restart: unless-stopped
        ports:
            - 80:80
            - 443:443
        depends_on:
            - web
        volumes:
            - ./containers/nginx:/etc/nginx/conf.d
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

    certbot:
        image: certbot/certbot
        restart: unless-stopped
        volumes:
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

    node-exporter:
        image: prom/node-exporter:latest
        container_name: monitoring_node_exporter
        restart: unless-stopped
        expose:
            - 9100

    cadvisor:
        image: google/cadvisor:latest
        container_name: monitoring_cadvisor
        restart: unless-stopped
        volumes:
        - /:/rootfs:ro
        - /var/run:/var/run:rw
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
        - /dev/disk/:/dev/disk:ro
        expose:
            - 8080

    timescaledb:
        image: timescaledev/timescale_prometheus_extra:latest-pg12
        restart: always
        environment:
            - POSTGRES_PASSWORD=password
            - POSTGRES_HOST_AUTH_METHOD=trust
        expose:
            - 5432

    timescale:
        image: timescale/timescale-prometheus:0.1
        restart: unless-stopped
        depends_on:
            - timescaledb
        environment:
            - TS_PROM_DB_NAME=postgres
            - TS_PROM_DB_HOST=timescaledb
            - TS_PROM_DB_PASSWORD=password
            - TS_PROM_DB_SSL_MODE=disable
        expose:
            - 9201

    prometheus:
        image: prom/prometheus
        restart: unless-stopped
        user: "root"
        depends_on:
            - timescale
        expose:
            - 9090
        volumes:
            - ./containers/prometheus/:/etc/prometheus/
            - ./data/prometheus:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'

    grafana:
        image: grafana/grafana
        restart: unless-stopped
        user: "root"
        depends_on:
            - prometheus
        ports:
            - 3000:3000
        volumes:
            - ./data/grafana:/var/lib/grafana
            - ./data/grafana-provisioning/:/etc/grafana/provisioning/
        environment:
            - GF_USERS_ALLOW_SIGN_UP=false
